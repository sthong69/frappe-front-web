/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as VerifyEmailImport } from './routes/verify-email'
import { Route as TestImport } from './routes/test'
import { Route as RendezVousImport } from './routes/rendez-vous'
import { Route as RegisterEmailSentImport } from './routes/register-email-sent'
import { Route as RegisterImport } from './routes/register'
import { Route as RecoverPasswordImport } from './routes/recover-password'
import { Route as FaqImport } from './routes/faq'
import { Route as AddSupervisorImport } from './routes/add-supervisor'
import { Route as AuthImport } from './routes/_auth'
import { Route as IndexImport } from './routes/index'
import { Route as AuthProfileImport } from './routes/_auth/profile'
import { Route as AuthDashboardImport } from './routes/_auth/dashboard'

// Create/Update Routes

const VerifyEmailRoute = VerifyEmailImport.update({
  id: '/verify-email',
  path: '/verify-email',
  getParentRoute: () => rootRoute,
} as any)

const TestRoute = TestImport.update({
  id: '/test',
  path: '/test',
  getParentRoute: () => rootRoute,
} as any)

const RendezVousRoute = RendezVousImport.update({
  id: '/rendez-vous',
  path: '/rendez-vous',
  getParentRoute: () => rootRoute,
} as any)

const RegisterEmailSentRoute = RegisterEmailSentImport.update({
  id: '/register-email-sent',
  path: '/register-email-sent',
  getParentRoute: () => rootRoute,
} as any)

const RegisterRoute = RegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const RecoverPasswordRoute = RecoverPasswordImport.update({
  id: '/recover-password',
  path: '/recover-password',
  getParentRoute: () => rootRoute,
} as any)

const FaqRoute = FaqImport.update({
  id: '/faq',
  path: '/faq',
  getParentRoute: () => rootRoute,
} as any)

const AddSupervisorRoute = AddSupervisorImport.update({
  id: '/add-supervisor',
  path: '/add-supervisor',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthProfileRoute = AuthProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AuthRoute,
} as any)

const AuthDashboardRoute = AuthDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/add-supervisor': {
      id: '/add-supervisor'
      path: '/add-supervisor'
      fullPath: '/add-supervisor'
      preLoaderRoute: typeof AddSupervisorImport
      parentRoute: typeof rootRoute
    }
    '/faq': {
      id: '/faq'
      path: '/faq'
      fullPath: '/faq'
      preLoaderRoute: typeof FaqImport
      parentRoute: typeof rootRoute
    }
    '/recover-password': {
      id: '/recover-password'
      path: '/recover-password'
      fullPath: '/recover-password'
      preLoaderRoute: typeof RecoverPasswordImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterImport
      parentRoute: typeof rootRoute
    }
    '/register-email-sent': {
      id: '/register-email-sent'
      path: '/register-email-sent'
      fullPath: '/register-email-sent'
      preLoaderRoute: typeof RegisterEmailSentImport
      parentRoute: typeof rootRoute
    }
    '/rendez-vous': {
      id: '/rendez-vous'
      path: '/rendez-vous'
      fullPath: '/rendez-vous'
      preLoaderRoute: typeof RendezVousImport
      parentRoute: typeof rootRoute
    }
    '/test': {
      id: '/test'
      path: '/test'
      fullPath: '/test'
      preLoaderRoute: typeof TestImport
      parentRoute: typeof rootRoute
    }
    '/verify-email': {
      id: '/verify-email'
      path: '/verify-email'
      fullPath: '/verify-email'
      preLoaderRoute: typeof VerifyEmailImport
      parentRoute: typeof rootRoute
    }
    '/_auth/dashboard': {
      id: '/_auth/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthDashboardImport
      parentRoute: typeof AuthImport
    }
    '/_auth/profile': {
      id: '/_auth/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthProfileImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthDashboardRoute: typeof AuthDashboardRoute
  AuthProfileRoute: typeof AuthProfileRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthDashboardRoute: AuthDashboardRoute,
  AuthProfileRoute: AuthProfileRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/add-supervisor': typeof AddSupervisorRoute
  '/faq': typeof FaqRoute
  '/recover-password': typeof RecoverPasswordRoute
  '/register': typeof RegisterRoute
  '/register-email-sent': typeof RegisterEmailSentRoute
  '/rendez-vous': typeof RendezVousRoute
  '/test': typeof TestRoute
  '/verify-email': typeof VerifyEmailRoute
  '/dashboard': typeof AuthDashboardRoute
  '/profile': typeof AuthProfileRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/add-supervisor': typeof AddSupervisorRoute
  '/faq': typeof FaqRoute
  '/recover-password': typeof RecoverPasswordRoute
  '/register': typeof RegisterRoute
  '/register-email-sent': typeof RegisterEmailSentRoute
  '/rendez-vous': typeof RendezVousRoute
  '/test': typeof TestRoute
  '/verify-email': typeof VerifyEmailRoute
  '/dashboard': typeof AuthDashboardRoute
  '/profile': typeof AuthProfileRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/add-supervisor': typeof AddSupervisorRoute
  '/faq': typeof FaqRoute
  '/recover-password': typeof RecoverPasswordRoute
  '/register': typeof RegisterRoute
  '/register-email-sent': typeof RegisterEmailSentRoute
  '/rendez-vous': typeof RendezVousRoute
  '/test': typeof TestRoute
  '/verify-email': typeof VerifyEmailRoute
  '/_auth/dashboard': typeof AuthDashboardRoute
  '/_auth/profile': typeof AuthProfileRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/add-supervisor'
    | '/faq'
    | '/recover-password'
    | '/register'
    | '/register-email-sent'
    | '/rendez-vous'
    | '/test'
    | '/verify-email'
    | '/dashboard'
    | '/profile'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/add-supervisor'
    | '/faq'
    | '/recover-password'
    | '/register'
    | '/register-email-sent'
    | '/rendez-vous'
    | '/test'
    | '/verify-email'
    | '/dashboard'
    | '/profile'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/add-supervisor'
    | '/faq'
    | '/recover-password'
    | '/register'
    | '/register-email-sent'
    | '/rendez-vous'
    | '/test'
    | '/verify-email'
    | '/_auth/dashboard'
    | '/_auth/profile'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  AddSupervisorRoute: typeof AddSupervisorRoute
  FaqRoute: typeof FaqRoute
  RecoverPasswordRoute: typeof RecoverPasswordRoute
  RegisterRoute: typeof RegisterRoute
  RegisterEmailSentRoute: typeof RegisterEmailSentRoute
  RendezVousRoute: typeof RendezVousRoute
  TestRoute: typeof TestRoute
  VerifyEmailRoute: typeof VerifyEmailRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  AddSupervisorRoute: AddSupervisorRoute,
  FaqRoute: FaqRoute,
  RecoverPasswordRoute: RecoverPasswordRoute,
  RegisterRoute: RegisterRoute,
  RegisterEmailSentRoute: RegisterEmailSentRoute,
  RendezVousRoute: RendezVousRoute,
  TestRoute: TestRoute,
  VerifyEmailRoute: VerifyEmailRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/add-supervisor",
        "/faq",
        "/recover-password",
        "/register",
        "/register-email-sent",
        "/rendez-vous",
        "/test",
        "/verify-email"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/dashboard",
        "/_auth/profile"
      ]
    },
    "/add-supervisor": {
      "filePath": "add-supervisor.tsx"
    },
    "/faq": {
      "filePath": "faq.tsx"
    },
    "/recover-password": {
      "filePath": "recover-password.tsx"
    },
    "/register": {
      "filePath": "register.tsx"
    },
    "/register-email-sent": {
      "filePath": "register-email-sent.tsx"
    },
    "/rendez-vous": {
      "filePath": "rendez-vous.tsx"
    },
    "/test": {
      "filePath": "test.tsx"
    },
    "/verify-email": {
      "filePath": "verify-email.tsx"
    },
    "/_auth/dashboard": {
      "filePath": "_auth/dashboard.tsx",
      "parent": "/_auth"
    },
    "/_auth/profile": {
      "filePath": "_auth/profile.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
